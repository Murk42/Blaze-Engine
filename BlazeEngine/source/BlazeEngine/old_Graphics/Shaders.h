#pragma once

const char* line2D_vertShader = 
"#version 450\n"
"\n"
"layout(location = 0) in vec2 vert_pos1;\n"
"layout(location = 1) in vec2 vert_pos2;\n"
"layout(location = 2) in vec4 vert_color;\n"
"layout(location = 3) in float vert_width;\n"
"\n"
"out vec2 geom_pos1;\n"
"out vec2 geom_pos2;\n"
"out vec4 geom_color;\n"
"out float geom_width;\n"
"\n"
"void main()\n"
"{\n"
"	geom_pos1 = vert_pos1;\n"
"	geom_pos2 = vert_pos2;\n"
"	geom_color = vert_color;\n"
"	geom_width = vert_width;\n"
"}\n"
;
const char* line2D_geomShader = 
"#version 450\n"
"\n"
"in vec2 geom_pos1[];\n"
"in vec2 geom_pos2[];\n"
"in vec4 geom_color[];\n"
"in float geom_width[];\n"
"\n"
"out vec4 frag_color;\n"
"\n"
"layout(points) in;\n"
"layout(triangle_strip, max_vertices = 4) out;\n"
"\n"
"uniform mat4 u_MVP;\n"
"\n"
"void main()\n"
"{\n"
"	vec2 dir = geom_pos2[0] - geom_pos1[0];\n"
"	float len = length(geom_pos2[0] - geom_pos1[0]);\n"
"	dir = dir / len;\n"
"	vec2 normal = vec2(dir.y, -dir.x);\n"
"	float half_width = geom_width[0];\n"
"\n"
"	gl_Position = u_MVP * vec4(geom_pos1 - dir * half_width - normal * half_width, 0, 1);\n"
"	frag_color = geom_color[0];\n"
"	EmitVertex();\n"
"\n"
"	gl_Position = u_MVP * vec4(geom_pos1 - dir * half_width + normal * half_width, 0, 1);\n"
"	frag_color = geom_color[0];\n"
"	EmitVertex();\n"
"\n"
"	gl_Position = u_MVP * vec4(geom_pos1 + dir * (half_width + len) - normal * half_width, 0, 1);\n"
"	frag_color = geom_color[0];\n"
"	EmitVertex();\n"
"\n"
"	gl_Position = u_MVP * vec4(geom_pos1 + dir * (half_width + len) + normal * half_width, 0, 1);\n"
"	frag_color = geom_color[0];\n"
"	EmitVertex();\n"
"\n"
"	EndPrimitive();\n"
"}\n"
;
const char* line2D_fragShader =
"#version 450\n"
"\n"
"in vec4 frag_color;\n"
"\n"
"void main()\n"
"{\n"
"	gl_FragColor = frag_color;\n"
"}\n"
;